// @generated by protobuf-ts 2.9.6 with parameter server_grpc1,use_proto_field_name
// @generated from protobuf file "user.proto" (package "user", syntax proto3)
// tslint:disable
import { GetAllUsersByDepartmentResponse } from "./department";
import { GetAllUsersByDepartmentRequest } from "./department";
import { GetAllUsersResponse } from "./user";
import { GetAllUsersRequest } from "./user";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service user.UserService
 */
export interface IUserService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: GetAllUsers(user.GetAllUsersRequest) returns (user.GetAllUsersResponse);
     */
    getAllUsers: grpc.handleUnaryCall<GetAllUsersRequest, GetAllUsersResponse>;
    /**
     * @generated from protobuf rpc: GetAllUsersByDepartment(department.GetAllUsersByDepartmentRequest) returns (department.GetAllUsersByDepartmentResponse);
     */
    getAllUsersByDepartment: grpc.handleUnaryCall<GetAllUsersByDepartmentRequest, GetAllUsersByDepartmentResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service user.UserService.
 *
 * Usage: Implement the interface IUserService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IUserService = ...
 * server.addService(userServiceDefinition, service);
 * ```
 */
export const userServiceDefinition: grpc.ServiceDefinition<IUserService> = {
    getAllUsers: {
        path: "/user.UserService/GetAllUsers",
        originalName: "GetAllUsers",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => GetAllUsersResponse.fromBinary(bytes),
        requestDeserialize: bytes => GetAllUsersRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(GetAllUsersResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(GetAllUsersRequest.toBinary(value))
    },
    getAllUsersByDepartment: {
        path: "/user.UserService/GetAllUsersByDepartment",
        originalName: "GetAllUsersByDepartment",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => GetAllUsersByDepartmentResponse.fromBinary(bytes),
        requestDeserialize: bytes => GetAllUsersByDepartmentRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(GetAllUsersByDepartmentResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(GetAllUsersByDepartmentRequest.toBinary(value))
    }
};
